@using AubgEMS.Core.Models.Common
@using AubgEMS.Core.Models.Clubs
@model PageResult<ClubListItemDto>

@{
    ViewData["Title"] = "Clubs";

    // read current filter state from ViewBag (set in controller)
    var departments = ViewBag.Departments as Microsoft.AspNetCore.Mvc.Rendering.SelectList;
    int? deptId     = (int?)ViewBag.SelectedDepartmentId;
    string? search  = ViewBag.Search as string;
    int pageSize    = ViewBag.PageSize is int ps ? ps : Model.PageSize;

    var totalPages  = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
    var page        = Model.Page;
    var prevDisabled = page <= 1 ? "disabled" : "";
    var nextDisabled = page >= totalPages ? "disabled" : "";
}

<!-- Header -->
<nav aria-label="breadcrumb" class="mb-2">
    <ol class="breadcrumb small">
        <li class="breadcrumb-item">
            <a asp-controller="Home" asp-action="Index">Home</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Clubs</li>
    </ol>
</nav>

<div class="mb-3">
    <h1 class="page-title">Clubs</h1>
    <p class="page-subtitle">Browse clubs by department and explore their events.</p>
</div>

<form method="get" asp-action="Index" class="row g-2 mb-4">
    <div class="col-sm-4">
        <label class="form-label">Department</label>
        <select class="form-select" name="departmentId" asp-items="departments">
            <option value="">(All)</option>
        </select>
    </div>
    <div class="col-sm-4">
        <label class="form-label">Search</label>
        <input class="form-control" type="text" name="search" value="@search" placeholder="name contains..." />
    </div>
    <div class="col-sm-2">
        <label class="form-label">Page size</label>
        <input class="form-control" type="number" name="pageSize" value="@pageSize" min="1" />
    </div>
    <div class="col-sm-2 d-flex align-items-end">
        <button class="btn btn-primary me-2">Filter</button>
        <a class="btn btn-outline-secondary" asp-action="Index">Reset</a>
    </div>
</form>

@if (!Model.Items.Any())
{
    @await Html.PartialAsync("_EmptyState", new AubgEMS.Models.EmptyStateViewModel {
        Icon = "bi-people",
        Title = "No clubs found",
        Message = "Try a different department or clear the search.",
        ActionText = "Reset",
        ActionController = "Clubs",
        ActionAction = "Index"
    })
}
else
{
    <table class="table table-striped align-middle">
        <thead>
        <tr>
            <th>Name</th>
            <th>Department</th>
            <th style="width: 120px;"></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var c in Model.Items)
        {
            <tr>
                <td>@c.Name</td>
                <td>@c.DepartmentName</td>
                <td class="text-end">
                    <a class="btn btn-sm btn-outline-secondary"
                       asp-action="Details"
                       asp-route-id="@c.Id">View</a>
                </td>
            </tr>
        }
        </tbody>
    </table>

    @if (totalPages > 1)
    {
        <nav aria-label="pager">
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-departmentId="@deptId"
                       asp-route-search="@search"
                       asp-route-page="@(page - 1)"
                       asp-route-pageSize="@pageSize">Prev</a>
                </li>

                <li class="page-item disabled">
                    <span class="page-link">Page @(page) of @(totalPages)</span>
                </li>

                <li class="page-item @nextDisabled">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-departmentId="@deptId"
                       asp-route-search="@search"
                       asp-route-page="@(page + 1)"
                       asp-route-pageSize="@pageSize">Next</a>
                </li>
            </ul>
        </nav>
    }
}